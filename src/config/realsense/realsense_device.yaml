%YAML:1.0

# Topics 
imu_topic: "/camera/imu"
image_topic: "/camera/color/image_raw"
output_path: "/home/oran/WS/Work/SLAM/VINS-DIO/output"

model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 720
distortion_parameters:
   k1: -0.04147906455637203
   k2: 0.0421725994438679
   p1: 9.672792763887184e-05
   p2: -6.962242324739366e-06
projection_parameters:
   fx: 646.5251878786579
   fy: 644.7872747551108
   cx: 641.0459730553982
   cy: 362.7310300617579

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.9999970569606225, -0.000530157786733908, -0.0023674887149415505,
           0.0005356383217675729, 0.9999971772042875, 0.0023148812163416984, 
           0.0023662547797023478, -0.0023161425212371986, 0.9999945181460443]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.030030082562852937, -0.006664141839620994, -0.014993296089277625]

# Feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
type: 0                 # for sim. of partial~total vision failure
min_dist: 50            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel), typical setting: 1.0
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

# IMU acc. multiply
acc_mult: 1.0

# DIO 
dio_model_path: "/home/oran/WS/Work/DIO/tdio/results/vcu-tum/ckpt-pc-sigmoid/trace.pt"      # "/home/oran/WS/Work/DIO/tdio/results/vcu-tum/ckpt-pc-sigmoid/trace.pt"

# Optimization parameters
max_solver_time: 0.04   # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 20.0 #10.0 # keyframe selection threshold (pixel)

# Imu parameters     The more accurate parameters you provide, the better performance
acc_n: 0.05       # accelerometer measurement noise standard deviation. 
gyr_n: 0.005      # gyroscope measurement noise standard deviation.     
acc_w: 0.0005     # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001    # gyroscope bias random work noise standard deviation.     
g_norm: 9.81     # gravity magnitude

# Loop closure
loop_closure: 0   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "" # save and load path 

# Unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

# Rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ